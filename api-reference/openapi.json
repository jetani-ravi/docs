{
  "openapi": "3.0.0",
  "info": {
    "title": "Voice-Agent",
    "version": "1.0.0",
    "description": "Voice-Agent API"
  },
  "servers": [
    {
      "url": "https://voice-agents.cloudmatetechnologies.com"
    }
  ],
  "paths": {
    "/api/v1/agent": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "post": {
        "summary": "Create agent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Agent created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the agent was created successfully.",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result.",
                      "example": "Agent Created Successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Agent details",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the agent.",
                          "example": "5f3c1e8a9d7b134c8a2fbe66"
                        },
                        "agent_config": {
                          "type": "object",
                          "description": "Configuration details for the agent.",
                          "properties": {
                            "agent_name": {
                              "type": "string",
                              "description": "Human-readable agent name.",
                              "example": "New Agent"
                            },
                            "agent_type": {
                              "type": "string",
                              "description": "Type of agent.",
                              "example": "conversation"
                            },
                            "tasks": {
                              "type": "array",
                              "description": "List of tasks assigned to the agent.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "task_type": {
                                    "type": "string",
                                    "description": "Type of the task.",
                                    "example": "conversation"
                                  },
                                  "toolchain": {
                                    "type": "object",
                                    "description": "Toolchain configuration for the task.",
                                    "properties": {
                                      "execution": {
                                        "type": "string",
                                        "description": "Execution mode for the toolchain.",
                                        "example": "parallel"
                                      },
                                      "pipelines": {
                                        "type": "array",
                                        "description": "Pipelines for the toolchain.",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "transcriber",
                                            "llm",
                                            "synthesizer"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "tools_config": {
                                    "type": "object",
                                    "description": "Configuration for tools used in the task.",
                                    "properties": {
                                      "llm_agent": {
                                        "type": "object",
                                        "properties": {
                                          "agent_flow_type": {
                                            "type": "string"
                                          },
                                          "agent_type": { "type": "string" },
                                          "llm_config": {
                                            "type": "object",
                                            "properties": {
                                              "model": { "type": "string" },
                                              "max_tokens": {
                                                "type": "integer"
                                              },
                                              "family": { "type": "string" },
                                              "temperature": {
                                                "type": "number"
                                              },
                                              "request_json": {
                                                "type": "boolean"
                                              },
                                              "top_k": { "type": "integer" },
                                              "top_p": { "type": "number" },
                                              "min_p": { "type": "number" },
                                              "frequency_penalty": {
                                                "type": "number"
                                              },
                                              "presence_penalty": {
                                                "type": "number"
                                              },
                                              "provider": { "type": "string" },
                                              "context_data": {
                                                "type": "object"
                                              },
                                              "agent_information": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "synthesizer": {
                                        "type": "object",
                                        "properties": {
                                          "provider": { "type": "string" },
                                          "provider_config": {
                                            "type": "object",
                                            "properties": {
                                              "voice": { "type": "string" },
                                              "model": { "type": "string" }
                                            }
                                          },
                                          "stream": { "type": "boolean" },
                                          "buffer_size": { "type": "integer" },
                                          "audio_format": { "type": "string" },
                                          "caching": { "type": "boolean" }
                                        }
                                      },
                                      "transcriber": {
                                        "type": "object",
                                        "properties": {
                                          "model": { "type": "string" },
                                          "language": { "type": "string" },
                                          "stream": { "type": "boolean" },
                                          "sampling_rate": {
                                            "type": "integer"
                                          },
                                          "encoding": { "type": "string" },
                                          "endpointing": { "type": "integer" },
                                          "keywords": { "type": "string" },
                                          "task": { "type": "string" },
                                          "provider": { "type": "string" }
                                        }
                                      },
                                      "input": {
                                        "type": "object",
                                        "properties": {
                                          "provider": { "type": "string" },
                                          "format": { "type": "string" }
                                        }
                                      },
                                      "output": {
                                        "type": "object",
                                        "properties": {
                                          "provider": { "type": "string" },
                                          "format": { "type": "string" }
                                        }
                                      },
                                      "api_tools": {
                                        "type": "object",
                                        "description": "API tools to use."
                                      }
                                    }
                                  },
                                  "task_config": {
                                    "type": "object",
                                    "description": "Configuration for the task.",
                                    "properties": {
                                      "voicemail": { "type": "boolean" },
                                      "optimize_latency": { "type": "boolean" },
                                      "hangup_after_silence": {
                                        "type": "integer"
                                      },
                                      "incremental_delay": {
                                        "type": "integer"
                                      },
                                      "number_of_words_for_interruption": {
                                        "type": "integer"
                                      },
                                      "interruption_backoff_period": {
                                        "type": "integer"
                                      },
                                      "hangup_after_LLMCall": {
                                        "type": "boolean"
                                      },
                                      "call_cancellation_prompt": {
                                        "type": "string"
                                      },
                                      "call_hangup_message": {
                                        "type": "string"
                                      },
                                      "backchanneling": { "type": "boolean" },
                                      "backchanneling_message_gap": {
                                        "type": "integer"
                                      },
                                      "backchanneling_start_delay": {
                                        "type": "integer"
                                      },
                                      "ambient_noise": { "type": "boolean" },
                                      "ambient_noise_track": {
                                        "type": "string"
                                      },
                                      "call_terminate": { "type": "integer" },
                                      "use_fillers": { "type": "boolean" },
                                      "trigger_user_online_message_after": {
                                        "type": "integer"
                                      },
                                      "check_user_online_message": {
                                        "type": "string"
                                      },
                                      "check_if_user_online": {
                                        "type": "boolean"
                                      },
                                      "generate_precise_transcript": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "agent_welcome_message": {
                              "type": "string",
                              "description": "Welcome message for the agent.",
                              "example": "Hello, This is survey call from bank of india"
                            }
                          }
                        },
                        "agent_prompts": {
                          "type": "object",
                          "description": "Prompts used by the agent.",
                          "properties": {
                            "task_1": {
                              "type": "object",
                              "properties": {
                                "system_prompt": {
                                  "type": "string",
                                  "description": "System prompt for the agent.",
                                  "example": "Your name is Lily Jay, a friendly survey agent at Bank of India..."
                                }
                              }
                            }
                          }
                        },
                        "assistant_status": {
                          "type": "string",
                          "description": "Current status of the agent.",
                          "example": "seeding"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID.",
                          "example": "7e1d3a9c8f244eb7a65fc230"
                        },
                        "agent_id": {
                          "type": "string",
                          "description": "Agent ID.",
                          "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "input": {
                            "nullable": true
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "detail": [
                    {
                      "type": "missing",
                      "loc": ["body"],
                      "msg": "Field required",
                      "input": null,
                      "url": "https://errors.pydantic.dev/2.5/v/missing"
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent_prompts": {
                    "type": "object",
                    "description": "Prompts and instructions for the agent's behavior.",
                    "properties": {
                      "task_1": {
                        "type": "object",
                        "description": "Configuration for the primary task.",
                        "properties": {
                          "system_prompt": {
                            "type": "string",
                            "format": "style",
                            "description": "System-level instructions that define the agent's role, behavior, and capabilities.",
                            "example": "Your name is Lily Jay, a friendly survey agent at Bank of India. You will keep your sentences short, easy to follow, and always stay on topic. Never reply with more than 2 sentences. Your role is to gather feedback from customers who have used Business Loans, record their NPS score (0–10), and understand their experience."
                          }
                        }
                      }
                    }
                  },
                  "agent_config": {
                    "type": "object",
                    "description": "Configuration details for the agent.",
                    "properties": {
                      "agent_welcome_message": {
                        "type": "string",
                        "description": "Initial greeting message played when the call starts.",
                        "example": "Hello, This is survey call from bank of india"
                      },
                      "agent_name": {
                        "type": "string",
                        "description": "Human-readable name for the agent.",
                        "example": "Bank Survey Agent"
                      },
                      "agent_type": {
                        "type": "string",
                        "description": "Type of agent (e.g., conversation, survey, etc.).",
                        "example": "conversation"
                      },
                      "tasks": {
                        "type": "array",
                        "description": "List of tasks that the agent can perform.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tools_config": {
                              "type": "object",
                              "description": "Configuration for various tools used by the agent.",
                              "properties": {
                                "llm_agent": {
                                  "type": "object",
                                  "description": "Configuration for the LLM agent component.",
                                  "properties": {
                                    "agent_flow_type": {
                                      "type": "string",
                                      "description": "Type of agent flow (e.g., streaming, batch).",
                                      "example": "streaming"
                                    },
                                    "agent_type": {
                                      "type": "string",
                                      "description": "Type of LLM agent implementation.",
                                      "example": "simple_llm_agent"
                                    },
                                    "llm_config": {
                                      "type": "object",
                                      "description": "Configuration for the language model.",
                                      "properties": {
                                        "model": {
                                          "type": "string",
                                          "description": "Name of the language model to use.",
                                          "example": "gpt-3.5-turbo"
                                        },
                                        "max_tokens": {
                                          "type": "integer",
                                          "description": "Maximum number of tokens to generate.",
                                          "example": 150
                                        },
                                        "family": {
                                          "type": "string",
                                          "description": "Model family or provider.",
                                          "example": "openai"
                                        },
                                        "temperature": {
                                          "type": "number",
                                          "description": "Sampling temperature for generation.",
                                          "example": 0.2
                                        },
                                        "request_json": {
                                          "type": "boolean",
                                          "description": "Whether to request JSON formatted responses.",
                                          "example": false
                                        },
                                        "top_k": {
                                          "type": "integer",
                                          "description": "Number of highest probability tokens to keep.",
                                          "example": 0
                                        },
                                        "top_p": {
                                          "type": "number",
                                          "description": "Nucleus sampling parameter.",
                                          "example": 0.9
                                        },
                                        "min_p": {
                                          "type": "number",
                                          "description": "Minimum probability threshold.",
                                          "example": 0.1
                                        },
                                        "frequency_penalty": {
                                          "type": "number",
                                          "description": "Penalty for token frequency.",
                                          "example": 0.0
                                        },
                                        "presence_penalty": {
                                          "type": "number",
                                          "description": "Penalty for token presence.",
                                          "example": 0.0
                                        },
                                        "provider": {
                                          "type": "string",
                                          "description": "LLM provider name.",
                                          "example": "openai"
                                        },
                                        "context_data": {
                                          "type": "object",
                                          "description": "Additional context data for the model.",
                                          "example": null
                                        },
                                        "agent_information": {
                                          "type": "string",
                                          "description": "Additional information about the agent.",
                                          "example": null
                                        }
                                      }
                                    }
                                  }
                                },
                                "synthesizer": {
                                  "type": "object",
                                  "description": "Configuration for text-to-speech synthesis.",
                                  "properties": {
                                    "provider": {
                                      "type": "string",
                                      "description": "TTS provider name.",
                                      "example": "deepgram"
                                    },
                                    "provider_config": {
                                      "type": "object",
                                      "description": "Provider-specific configuration.",
                                      "properties": {
                                        "voice": {
                                          "type": "string",
                                          "description": "Voice ID or name to use.",
                                          "example": "Asteria"
                                        },
                                        "model": {
                                          "type": "string",
                                          "description": "TTS model to use.",
                                          "example": "aura-asteria-en"
                                        }
                                      }
                                    },
                                    "stream": {
                                      "type": "boolean",
                                      "description": "Whether to stream the audio output.",
                                      "example": true
                                    },
                                    "buffer_size": {
                                      "type": "integer",
                                      "description": "Size of audio buffer in milliseconds.",
                                      "example": 150
                                    },
                                    "audio_format": {
                                      "type": "string",
                                      "description": "Format of the audio output.",
                                      "example": "wav"
                                    },
                                    "caching": {
                                      "type": "boolean",
                                      "description": "Whether to cache generated audio.",
                                      "example": true
                                    }
                                  }
                                },
                                "transcriber": {
                                  "type": "object",
                                  "description": "Configuration for speech-to-text transcription.",
                                  "properties": {
                                    "model": {
                                      "type": "string",
                                      "description": "Transcription model to use.",
                                      "example": "nova-2"
                                    },
                                    "language": {
                                      "type": "string",
                                      "description": "Language code for transcription.",
                                      "example": "en"
                                    },
                                    "stream": {
                                      "type": "boolean",
                                      "description": "Whether to stream the transcription.",
                                      "example": true
                                    },
                                    "sampling_rate": {
                                      "type": "integer",
                                      "description": "Audio sampling rate in Hz.",
                                      "example": 16000
                                    },
                                    "encoding": {
                                      "type": "string",
                                      "description": "Audio encoding format.",
                                      "example": "linear16"
                                    },
                                    "endpointing": {
                                      "type": "integer",
                                      "description": "Endpoint detection threshold in milliseconds.",
                                      "example": 700
                                    },
                                    "keywords": {
                                      "type": "string",
                                      "description": "Keywords to boost in transcription.",
                                      "example": ""
                                    },
                                    "task": {
                                      "type": "string",
                                      "description": "Transcription task type.",
                                      "example": "transcribe"
                                    },
                                    "provider": {
                                      "type": "string",
                                      "description": "Transcription provider name.",
                                      "example": "deepgram"
                                    }
                                  }
                                },
                                "input": {
                                  "type": "object",
                                  "description": "Configuration for audio input handling.",
                                  "properties": {
                                    "provider": {
                                      "type": "string",
                                      "description": "Input provider name.",
                                      "example": "twilio"
                                    },
                                    "format": {
                                      "type": "string",
                                      "description": "Input audio format.",
                                      "example": "wav"
                                    }
                                  }
                                },
                                "output": {
                                  "type": "object",
                                  "description": "Configuration for audio output handling.",
                                  "properties": {
                                    "provider": {
                                      "type": "string",
                                      "description": "Output provider name.",
                                      "example": "twilio"
                                    },
                                    "format": {
                                      "type": "string",
                                      "description": "Output audio format.",
                                      "example": "wav"
                                    }
                                  }
                                },
                                "api_tools": {
                                  "type": "object",
                                  "description": "API tools to use."
                                }
                              }
                            },
                            "task_config": {
                              "type": "object",
                              "description": "Configuration for task-specific behavior.",
                              "properties": {
                                "voicemail": {
                                  "type": "boolean",
                                  "description": "Whether to handle voicemail detection.",
                                  "example": false
                                },
                                "optimize_latency": {
                                  "type": "boolean",
                                  "description": "Whether to optimize for low latency.",
                                  "example": true
                                },
                                "hangup_after_silence": {
                                  "type": "integer",
                                  "description": "Seconds of silence before hanging up.",
                                  "example": 10
                                },
                                "incremental_delay": {
                                  "type": "integer",
                                  "description": "Delay between responses in milliseconds.",
                                  "example": 1200
                                },
                                "number_of_words_for_interruption": {
                                  "type": "integer",
                                  "description": "Number of words before allowing interruption.",
                                  "example": 2
                                },
                                "interruption_backoff_period": {
                                  "type": "integer",
                                  "description": "Delay before allowing interruption in milliseconds.",
                                  "example": 0
                                },
                                "hangup_after_LLMCall": {
                                  "type": "boolean",
                                  "description": "Whether to hang up after LLM response.",
                                  "example": false
                                },
                                "call_cancellation_prompt": {
                                  "type": "string",
                                  "description": "Message to play when call is cancelled.",
                                  "example": ""
                                },
                                "call_hangup_message": {
                                  "nullable": true,
                                  "type": "string",
                                  "description": "Message to play before hanging up.",
                                  "example": null
                                },
                                "backchanneling": {
                                  "type": "boolean",
                                  "description": "Whether to use backchanneling.",
                                  "example": false
                                },
                                "backchanneling_message_gap": {
                                  "type": "integer",
                                  "description": "Gap between backchanneling messages in seconds.",
                                  "example": 5
                                },
                                "backchanneling_start_delay": {
                                  "type": "integer",
                                  "description": "Delay before starting backchanneling in seconds.",
                                  "example": 5
                                },
                                "ambient_noise": {
                                  "type": "boolean",
                                  "description": "Whether to add ambient noise.",
                                  "example": false
                                },
                                "ambient_noise_track": {
                                  "type": "string",
                                  "description": "Ambient noise track to use.",
                                  "example": "office-ambience"
                                },
                                "call_terminate": {
                                  "type": "integer",
                                  "description": "Maximum call duration in seconds.",
                                  "example": 300
                                },
                                "use_fillers": {
                                  "type": "boolean",
                                  "description": "Whether to use filler words.",
                                  "example": false
                                },
                                "trigger_user_online_message_after": {
                                  "type": "integer",
                                  "description": "Seconds before checking if user is online.",
                                  "example": 6
                                },
                                "check_user_online_message": {
                                  "type": "string",
                                  "description": "Message to play when checking if user is online.",
                                  "example": "Hey, are you still there"
                                },
                                "check_if_user_online": {
                                  "type": "boolean",
                                  "description": "Whether to check if user is online.",
                                  "example": true
                                },
                                "generate_precise_transcript": {
                                  "type": "boolean",
                                  "description": "Whether to generate detailed transcript.",
                                  "example": false
                                }
                              }
                            },
                            "task_type": {
                              "type": "string",
                              "description": "Type of task to perform.",
                              "example": "conversation"
                            },
                            "toolchain": {
                              "type": "object",
                              "description": "Configuration for tool execution chain.",
                              "properties": {
                                "execution": {
                                  "type": "string",
                                  "description": "Execution mode for tools.",
                                  "example": "parallel"
                                },
                                "pipelines": {
                                  "type": "array",
                                  "description": "Ordered list of tool pipelines.",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "example": [
                                    ["transcriber", "llm", "synthesizer"]
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agent/{newAgent_id}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        },
        {
          "name": "newAgent_id",
          "in": "path",
          "required": true,
          "description": "ID of the agent to retrieve",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get agent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Agent retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the agent was retrieved successfully.",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result.",
                      "example": "Agent fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Agent details",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the agent.",
                          "example": "5f3c1e8a9d7b134c8a2fbe66"
                        },
                        "agent_config": {
                          "type": "object",
                          "description": "Configuration details for the agent.",
                          "properties": {
                            "agent_name": {
                              "type": "string",
                              "description": "Human-readable agent name.",
                              "example": "New Agent"
                            },
                            "agent_type": {
                              "type": "string",
                              "description": "Type of agent.",
                              "example": "conversation"
                            },
                            "tasks": {
                              "type": "array",
                              "description": "List of tasks assigned to the agent.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "task_type": {
                                    "type": "string",
                                    "description": "Type of the task.",
                                    "example": "conversation"
                                  },
                                  "toolchain": {
                                    "type": "object",
                                    "description": "Toolchain configuration for the task.",
                                    "properties": {
                                      "execution": {
                                        "type": "string",
                                        "description": "Execution mode for the toolchain.",
                                        "example": "parallel"
                                      },
                                      "pipelines": {
                                        "type": "array",
                                        "description": "Pipelines for the toolchain.",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "transcriber",
                                            "llm",
                                            "synthesizer"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "tools_config": {
                                    "type": "object",
                                    "description": "Configuration for tools used in the task.",
                                    "properties": {
                                      "llm_agent": {
                                        "type": "object",
                                        "properties": {
                                          "agent_flow_type": {
                                            "type": "string"
                                          },
                                          "agent_type": { "type": "string" },
                                          "llm_config": {
                                            "type": "object",
                                            "properties": {
                                              "model": { "type": "string" },
                                              "max_tokens": {
                                                "type": "integer"
                                              },
                                              "family": { "type": "string" },
                                              "temperature": {
                                                "type": "number"
                                              },
                                              "request_json": {
                                                "type": "boolean"
                                              },
                                              "stop": { "nullable": true },
                                              "top_k": { "type": "integer" },
                                              "top_p": { "type": "number" },
                                              "min_p": { "type": "number" },
                                              "frequency_penalty": {
                                                "type": "number"
                                              },
                                              "presence_penalty": {
                                                "type": "number"
                                              },
                                              "provider": { "type": "string" },
                                              "base_url": { "type": "string" },
                                              "agent_flow_type": {
                                                "type": "string"
                                              },
                                              "routes": { "type": "array" },
                                              "extraction_details": {
                                                "type": "object"
                                              },
                                              "summary_details": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "synthesizer": {
                                        "type": "object",
                                        "properties": {
                                          "provider": { "type": "string" },
                                          "provider_config": {
                                            "type": "object",
                                            "properties": {
                                              "voice": { "type": "string" },
                                              "model": { "type": "string" }
                                            }
                                          },
                                          "stream": { "type": "boolean" },
                                          "buffer_size": { "type": "integer" },
                                          "audio_format": { "type": "string" },
                                          "caching": { "type": "boolean" }
                                        }
                                      },
                                      "transcriber": {
                                        "type": "object",
                                        "properties": {
                                          "model": { "type": "string" },
                                          "language": { "type": "string" },
                                          "stream": { "type": "boolean" },
                                          "sampling_rate": {
                                            "type": "integer"
                                          },
                                          "encoding": { "type": "string" },
                                          "endpointing": { "type": "integer" },
                                          "keywords": { "type": "string" },
                                          "task": { "type": "string" },
                                          "provider": { "type": "string" }
                                        }
                                      },
                                      "input": {
                                        "type": "object",
                                        "properties": {
                                          "provider": { "type": "string" },
                                          "format": { "type": "string" }
                                        }
                                      },
                                      "output": {
                                        "type": "object",
                                        "properties": {
                                          "provider": { "type": "string" },
                                          "format": { "type": "string" }
                                        }
                                      },
                                      "api_tools": {
                                        "type": "object",
                                        "properties": {
                                          "tools": { "type": "array" },
                                          "tool_params": { "type": "object" }
                                        }
                                      }
                                    }
                                  },
                                  "task_config": {
                                    "type": "object",
                                    "description": "Configuration for the task.",
                                    "properties": {
                                      "voicemail": { "type": "boolean" },
                                      "optimize_latency": { "type": "boolean" },
                                      "hangup_after_silence": {
                                        "type": "integer"
                                      },
                                      "incremental_delay": {
                                        "type": "integer"
                                      },
                                      "number_of_words_for_interruption": {
                                        "type": "integer"
                                      },
                                      "interruption_backoff_period": {
                                        "type": "integer"
                                      },
                                      "hangup_after_LLMCall": {
                                        "type": "boolean"
                                      },
                                      "call_cancellation_prompt": {
                                        "type": "string"
                                      },
                                      "call_hangup_message": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "backchanneling": { "type": "boolean" },
                                      "backchanneling_message_gap": {
                                        "type": "integer"
                                      },
                                      "backchanneling_start_delay": {
                                        "type": "integer"
                                      },
                                      "ambient_noise": { "type": "boolean" },
                                      "ambient_noise_track": {
                                        "type": "string"
                                      },
                                      "call_terminate": { "type": "integer" },
                                      "use_fillers": { "type": "boolean" },
                                      "trigger_user_online_message_after": {
                                        "type": "integer"
                                      },
                                      "check_user_online_message": {
                                        "type": "string"
                                      },
                                      "check_if_user_online": {
                                        "type": "boolean"
                                      },
                                      "generate_precise_transcript": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "agent_welcome_message": {
                              "type": "string",
                              "description": "Welcome message for the agent.",
                              "example": "Hello, This is survey call from bank of india"
                            }
                          }
                        },
                        "agent_prompts": {
                          "type": "object",
                          "description": "Prompts used by the agent.",
                          "properties": {
                            "task_1": {
                              "type": "object",
                              "properties": {
                                "system_prompt": {
                                  "type": "string",
                                  "description": "System prompt for the agent.",
                                  "example": "Your name is Lily Jay, a friendly survey agent at Bank of India. ..."
                                }
                              }
                            }
                          }
                        },
                        "assistant_status": {
                          "type": "string",
                          "description": "Current status of the agent.",
                          "example": "seeding"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID.",
                          "example": "7e1d3a9c8f244eb7a65fc230"
                        },
                        "agent_id": {
                          "type": "string",
                          "description": "Agent ID.",
                          "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Method Not Allowed"
                    }
                  }
                },
                "example": {
                  "detail": "Method Not Allowed"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update agent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent_config": {
                    "type": "object",
                    "description": "Configuration details for the agent.",
                    "properties": {
                      "agent_name": {
                        "type": "string",
                        "description": "Human-readable name for the agent.",
                        "example": "Updated Bank Survey Agent"
                      },
                      "agent_type": {
                        "type": "string",
                        "description": "Type of agent (e.g., conversation, survey, etc.).",
                        "example": "conversation"
                      },
                      "tasks": {
                        "type": "array",
                        "description": "List of tasks that the agent can perform.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tools_config": {
                              "type": "object",
                              "description": "Configuration for various tools used by the agent.",
                              "properties": {
                                "llm_agent": {
                                  "type": "object",
                                  "description": "Configuration for the LLM agent component.",
                                  "properties": {
                                    "agent_flow_type": {
                                      "type": "string",
                                      "description": "Type of agent flow (e.g., streaming, batch).",
                                      "example": "streaming"
                                    },
                                    "agent_type": {
                                      "type": "string",
                                      "description": "Type of LLM agent implementation.",
                                      "example": "simple_llm_agent"
                                    },
                                    "routes": {
                                      "nullable": true,
                                      "description": "Routing configuration for the agent.",
                                      "example": null
                                    },
                                    "llm_config": {
                                      "type": "object",
                                      "description": "Configuration for the language model.",
                                      "properties": {
                                        "model": {
                                          "type": "string",
                                          "description": "Name of the language model to use.",
                                          "example": "gpt-3.5-turbo"
                                        },
                                        "max_tokens": {
                                          "type": "integer",
                                          "description": "Maximum number of tokens to generate.",
                                          "example": 150
                                        },
                                        "family": {
                                          "type": "string",
                                          "description": "Model family or provider.",
                                          "example": "openai"
                                        },
                                        "temperature": {
                                          "type": "number",
                                          "description": "Sampling temperature for generation.",
                                          "example": 0.2
                                        },
                                        "request_json": {
                                          "type": "boolean",
                                          "description": "Whether to request JSON formatted responses.",
                                          "example": false
                                        },
                                        "stop": {
                                          "nullable": true,
                                          "description": "Stop sequences for generation.",
                                          "example": null
                                        },
                                        "top_k": {
                                          "type": "integer",
                                          "description": "Top-k sampling parameter.",
                                          "example": 0
                                        },
                                        "top_p": {
                                          "type": "number",
                                          "description": "Top-p sampling parameter.",
                                          "example": 0.9
                                        },
                                        "min_p": {
                                          "type": "number",
                                          "description": "Minimum probability threshold.",
                                          "example": 0.1
                                        },
                                        "frequency_penalty": {
                                          "type": "number",
                                          "description": "Penalty for token frequency.",
                                          "example": 0.0
                                        },
                                        "presence_penalty": {
                                          "type": "number",
                                          "description": "Penalty for token presence.",
                                          "example": 0.0
                                        },
                                        "provider": {
                                          "type": "string",
                                          "description": "LLM provider name.",
                                          "example": "openai"
                                        },
                                        "base_url": {
                                          "nullable": true,
                                          "description": "Base URL for API calls.",
                                          "example": null
                                        },
                                        "routes": {
                                          "nullable": true,
                                          "description": "API routing configuration.",
                                          "example": null
                                        },
                                        "agent_flow_type": {
                                          "type": "string",
                                          "description": "Type of agent flow for this configuration.",
                                          "example": "streaming"
                                        },
                                        "extraction_details": {
                                          "nullable": true,
                                          "description": "Configuration for information extraction.",
                                          "example": null
                                        },
                                        "summarization_details": {
                                          "nullable": true,
                                          "description": "Configuration for text summarization.",
                                          "example": null
                                        }
                                      }
                                    }
                                  }
                                },
                                "synthesizer": {
                                  "type": "object",
                                  "description": "Configuration for text-to-speech synthesis.",
                                  "properties": {
                                    "provider": {
                                      "type": "string",
                                      "description": "TTS provider name.",
                                      "example": "deepgram"
                                    },
                                    "provider_config": {
                                      "type": "object",
                                      "description": "Provider-specific configuration.",
                                      "properties": {
                                        "voice": {
                                          "type": "string",
                                          "description": "Voice ID or name to use.",
                                          "example": "Asteria"
                                        },
                                        "model": {
                                          "type": "string",
                                          "description": "TTS model to use.",
                                          "example": "aura-asteria-en"
                                        }
                                      }
                                    },
                                    "stream": {
                                      "type": "boolean",
                                      "description": "Whether to stream the audio output.",
                                      "example": true
                                    },
                                    "buffer_size": {
                                      "type": "integer",
                                      "description": "Size of audio buffer in milliseconds.",
                                      "example": 150
                                    },
                                    "audio_format": {
                                      "type": "string",
                                      "description": "Format of the audio output.",
                                      "example": "wav"
                                    },
                                    "caching": {
                                      "type": "boolean",
                                      "description": "Whether to cache generated audio.",
                                      "example": true
                                    }
                                  }
                                },
                                "transcriber": {
                                  "type": "object",
                                  "description": "Configuration for speech-to-text transcription.",
                                  "properties": {
                                    "model": {
                                      "type": "string",
                                      "description": "Transcription model to use.",
                                      "example": "nova-2"
                                    },
                                    "language": {
                                      "type": "string",
                                      "description": "Language code for transcription.",
                                      "example": "en"
                                    },
                                    "stream": {
                                      "type": "boolean",
                                      "description": "Whether to stream the transcription.",
                                      "example": true
                                    },
                                    "sampling_rate": {
                                      "type": "integer",
                                      "description": "Audio sampling rate in Hz.",
                                      "example": 16000
                                    },
                                    "encoding": {
                                      "type": "string",
                                      "description": "Audio encoding format.",
                                      "example": "linear16"
                                    },
                                    "endpointing": {
                                      "type": "integer",
                                      "description": "Endpoint detection threshold in milliseconds.",
                                      "example": 700
                                    },
                                    "keywords": {
                                      "type": "string",
                                      "description": "Keywords to boost in transcription.",
                                      "example": ""
                                    },
                                    "task": {
                                      "type": "string",
                                      "description": "Transcription task type.",
                                      "example": "transcribe"
                                    },
                                    "provider": {
                                      "type": "string",
                                      "description": "Transcription provider name.",
                                      "example": "deepgram"
                                    }
                                  }
                                },
                                "input": {
                                  "type": "object",
                                  "description": "Configuration for audio input handling.",
                                  "properties": {
                                    "provider": {
                                      "type": "string",
                                      "description": "Input provider name.",
                                      "example": "twilio"
                                    },
                                    "format": {
                                      "type": "string",
                                      "description": "Input audio format.",
                                      "example": "wav"
                                    }
                                  }
                                },
                                "output": {
                                  "type": "object",
                                  "description": "Configuration for audio output handling.",
                                  "properties": {
                                    "provider": {
                                      "type": "string",
                                      "description": "Output provider name.",
                                      "example": "twilio"
                                    },
                                    "format": {
                                      "type": "string",
                                      "description": "Output audio format.",
                                      "example": "wav"
                                    }
                                  }
                                },
                                "api_tools": {
                                  "type": "object",
                                  "description": "API tools to use.",
                                  "properties": {
                                    "tools": { "type": "array" },
                                    "tool_params": { "type": "object" }
                                  }
                                }
                              }
                            },
                            "task_config": {
                              "type": "object",
                              "description": "Configuration for task-specific behavior.",
                              "properties": {
                                "voicemail": {
                                  "type": "boolean",
                                  "description": "Whether to handle voicemail detection.",
                                  "example": false
                                },
                                "optimize_latency": {
                                  "type": "boolean",
                                  "description": "Whether to optimize for low latency.",
                                  "example": true
                                },
                                "hangup_after_silence": {
                                  "type": "integer",
                                  "description": "Seconds of silence before hanging up.",
                                  "example": 10
                                },
                                "incremental_delay": {
                                  "type": "integer",
                                  "description": "Delay between responses in milliseconds.",
                                  "example": 1200
                                },
                                "number_of_words_for_interruption": {
                                  "type": "integer",
                                  "description": "Number of words before allowing interruption.",
                                  "example": 2
                                },
                                "interruption_backoff_period": {
                                  "type": "integer",
                                  "description": "Delay before allowing interruption in milliseconds.",
                                  "example": 0
                                },
                                "hangup_after_LLMCall": {
                                  "type": "boolean",
                                  "description": "Whether to hang up after LLM response.",
                                  "example": false
                                },
                                "call_cancellation_prompt": {
                                  "type": "string",
                                  "description": "Message to play when call is cancelled.",
                                  "example": ""
                                },
                                "call_hangup_message": {
                                  "nullable": true,
                                  "type": "string",
                                  "description": "Message to play before hanging up.",
                                  "example": null
                                },
                                "backchanneling": {
                                  "type": "boolean",
                                  "description": "Whether to use backchanneling.",
                                  "example": false
                                },
                                "backchanneling_message_gap": {
                                  "type": "integer",
                                  "description": "Gap between backchanneling messages in seconds.",
                                  "example": 5
                                },
                                "backchanneling_start_delay": {
                                  "type": "integer",
                                  "description": "Delay before starting backchanneling in seconds.",
                                  "example": 5
                                },
                                "ambient_noise": {
                                  "type": "boolean",
                                  "description": "Whether to add ambient noise.",
                                  "example": false
                                },
                                "ambient_noise_track": {
                                  "type": "string",
                                  "description": "Ambient noise track to use.",
                                  "example": "office-ambience"
                                },
                                "call_terminate": {
                                  "type": "integer",
                                  "description": "Maximum call duration in seconds.",
                                  "example": 300
                                },
                                "use_fillers": {
                                  "type": "boolean",
                                  "description": "Whether to use filler words.",
                                  "example": false
                                },
                                "trigger_user_online_message_after": {
                                  "type": "integer",
                                  "description": "Seconds before checking if user is online.",
                                  "example": 6
                                },
                                "check_user_online_message": {
                                  "type": "string",
                                  "description": "Message to play when checking if user is online.",
                                  "example": "Hey, are you still there"
                                },
                                "check_if_user_online": {
                                  "type": "boolean",
                                  "description": "Whether to check if user is online.",
                                  "example": true
                                },
                                "generate_precise_transcript": {
                                  "type": "boolean",
                                  "description": "Whether to generate detailed transcript.",
                                  "example": false
                                }
                              }
                            },
                            "task_type": {
                              "type": "string",
                              "description": "Type of task to perform.",
                              "example": "conversation"
                            },
                            "toolchain": {
                              "type": "object",
                              "description": "Configuration for tool execution chain.",
                              "properties": {
                                "execution": {
                                  "type": "string",
                                  "description": "Execution mode for tools.",
                                  "example": "parallel"
                                },
                                "pipelines": {
                                  "type": "array",
                                  "description": "Ordered list of tool pipelines.",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "example": [
                                    ["transcriber", "llm", "synthesizer"]
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "agent_welcome_message": {
                        "type": "string",
                        "description": "Welcome message for the agent.",
                        "example": "Hello, how can I help you today?"
                      }
                    }
                  },
                  "agent_prompts": {
                    "type": "object",
                    "description": "Prompts for the agent.",
                    "properties": {
                      "task_1": { "type": "object" }
                    }
                  },
                  "assistant_status": {
                    "type": "string",
                    "description": "Current status of the agent.",
                    "example": "updated"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "User ID.",
                    "example": "7e1d3a9c8f244eb7a65fc230"
                  },
                  "agent_id": {
                    "type": "string",
                    "description": "Agent ID.",
                    "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Creation date of the agent.",
                    "example": "2025-01-20T15:57:17.998000"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Last update date of the agent.",
                    "example": "2025-01-20T15:57:17.998000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the agent was updated successfully.",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result.",
                      "example": "Agent updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the agent.",
                          "example": "5f3c1e8a9d7b134c8a2fbe66"
                        },
                        "agent_config": {
                          "type": "object",
                          "properties": {
                            "agent_name": {
                              "type": "string",
                              "description": "Human-readable agent name.",
                              "example": "New Agent updated"
                            },
                            "agent_type": {
                              "type": "string",
                              "description": "Type of agent.",
                              "example": "conversation"
                            },
                            "tasks": {
                              "type": "array",
                              "description": "List of tasks assigned to the agent.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "tools_config": {
                                    "type": "object",
                                    "properties": {
                                      "llm_agent": {
                                        "type": "object",
                                        "properties": {
                                          "agent_flow_type": {
                                            "type": "string",
                                            "example": "streaming"
                                          },
                                          "agent_type": {
                                            "type": "string",
                                            "example": "simple_llm_agent"
                                          },
                                          "routes": {
                                            "nullable": true,
                                            "example": null
                                          },
                                          "llm_config": {
                                            "type": "object",
                                            "properties": {
                                              "model": {
                                                "type": "string",
                                                "example": "gpt-3.5-turbo"
                                              },
                                              "max_tokens": {
                                                "type": "integer",
                                                "example": 150
                                              },
                                              "family": {
                                                "type": "string",
                                                "example": "openai"
                                              },
                                              "temperature": {
                                                "type": "number",
                                                "example": 0.2
                                              },
                                              "request_json": {
                                                "type": "boolean",
                                                "example": false
                                              },
                                              "stop": {
                                                "nullable": true,
                                                "example": null
                                              },
                                              "top_k": {
                                                "type": "integer",
                                                "example": 0
                                              },
                                              "top_p": {
                                                "type": "number",
                                                "example": 0.9
                                              },
                                              "min_p": {
                                                "type": "number",
                                                "example": 0.1
                                              },
                                              "frequency_penalty": {
                                                "type": "number",
                                                "example": 0.0
                                              },
                                              "presence_penalty": {
                                                "type": "number",
                                                "example": 0.0
                                              },
                                              "provider": {
                                                "type": "string",
                                                "example": "openai"
                                              },
                                              "base_url": {
                                                "nullable": true,
                                                "example": null
                                              },
                                              "routes": {
                                                "nullable": true,
                                                "example": null
                                              },
                                              "agent_flow_type": {
                                                "type": "string",
                                                "example": "streaming"
                                              },
                                              "extraction_details": {
                                                "nullable": true,
                                                "example": null
                                              },
                                              "summarization_details": {
                                                "nullable": true,
                                                "example": null
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "synthesizer": {
                                        "type": "object",
                                        "properties": {
                                          "provider": {
                                            "type": "string",
                                            "example": "deepgram"
                                          },
                                          "provider_config": {
                                            "type": "object",
                                            "properties": {
                                              "voice": {
                                                "type": "string",
                                                "example": "Asteria"
                                              },
                                              "model": {
                                                "type": "string",
                                                "example": "aura-asteria-en"
                                              }
                                            }
                                          },
                                          "stream": {
                                            "type": "boolean",
                                            "example": true
                                          },
                                          "buffer_size": {
                                            "type": "integer",
                                            "example": 150
                                          },
                                          "audio_format": {
                                            "type": "string",
                                            "example": "wav"
                                          },
                                          "caching": {
                                            "type": "boolean",
                                            "example": true
                                          }
                                        }
                                      },
                                      "transcriber": {
                                        "type": "object",
                                        "properties": {
                                          "model": {
                                            "type": "string",
                                            "example": "nova-2"
                                          },
                                          "language": {
                                            "type": "string",
                                            "example": "en"
                                          },
                                          "stream": {
                                            "type": "boolean",
                                            "example": true
                                          },
                                          "sampling_rate": {
                                            "type": "integer",
                                            "example": 16000
                                          },
                                          "encoding": {
                                            "type": "string",
                                            "example": "linear16"
                                          },
                                          "endpointing": {
                                            "type": "integer",
                                            "example": 700
                                          },
                                          "keywords": {
                                            "type": "string",
                                            "example": ""
                                          },
                                          "task": {
                                            "type": "string",
                                            "example": "transcribe"
                                          },
                                          "provider": {
                                            "type": "string",
                                            "example": "deepgram"
                                          }
                                        }
                                      },
                                      "input": {
                                        "type": "object",
                                        "properties": {
                                          "provider": {
                                            "type": "string",
                                            "example": "twilio"
                                          },
                                          "format": {
                                            "type": "string",
                                            "example": "wav"
                                          }
                                        }
                                      },
                                      "output": {
                                        "type": "object",
                                        "properties": {
                                          "provider": {
                                            "type": "string",
                                            "example": "twilio"
                                          },
                                          "format": {
                                            "type": "string",
                                            "example": "wav"
                                          }
                                        }
                                      },
                                      "api_tools": {
                                        "type": "object",
                                        "description": "API tools to use."
                                      }
                                    }
                                  },
                                  "toolchain": {
                                    "type": "object",
                                    "properties": {
                                      "execution": {
                                        "type": "string",
                                        "example": "parallel"
                                      },
                                      "pipelines": {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": { "type": "string" },
                                          "example": [
                                            "transcriber",
                                            "llm",
                                            "synthesizer"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "task_type": {
                                    "type": "string",
                                    "example": "conversation"
                                  },
                                  "task_config": {
                                    "type": "object",
                                    "properties": {
                                      "voicemail": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "optimize_latency": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "hangup_after_silence": {
                                        "type": "integer",
                                        "example": 10
                                      },
                                      "incremental_delay": {
                                        "type": "integer",
                                        "example": 1200
                                      },
                                      "number_of_words_for_interruption": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "interruption_backoff_period": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "hangup_after_LLMCall": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "call_cancellation_prompt": {
                                        "type": "string",
                                        "example": ""
                                      },
                                      "call_hangup_message": {
                                        "nullable": true,
                                        "type": "string",
                                        "example": null
                                      },
                                      "backchanneling": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "backchanneling_message_gap": {
                                        "type": "integer",
                                        "example": 5
                                      },
                                      "backchanneling_start_delay": {
                                        "type": "integer",
                                        "example": 5
                                      },
                                      "ambient_noise": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "ambient_noise_track": {
                                        "type": "string",
                                        "example": "office-ambience"
                                      },
                                      "call_terminate": {
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "use_fillers": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "trigger_user_online_message_after": {
                                        "type": "integer",
                                        "example": 6
                                      },
                                      "check_user_online_message": {
                                        "type": "string",
                                        "example": "Hey, are you still there"
                                      },
                                      "check_if_user_online": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "generate_precise_transcript": {
                                        "type": "boolean",
                                        "example": false
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "agent_welcome_message": {
                              "type": "string",
                              "description": "Welcome message for the agent.",
                              "example": "Hello, how can I help you today?"
                            }
                          }
                        },
                        "agent_prompts": {
                          "type": "object",
                          "properties": {
                            "task_1": {
                              "type": "object",
                              "properties": {
                                "system_prompt": {
                                  "type": "string",
                                  "description": "System prompt for the agent.",
                                  "example": "You are a helpful assistant."
                                }
                              }
                            }
                          }
                        },
                        "assistant_status": {
                          "type": "string",
                          "description": "Current status of the agent.",
                          "example": "updated"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID.",
                          "example": "7e1d3a9c8f244eb7a65fc230"
                        },
                        "agent_id": {
                          "type": "string",
                          "description": "Agent ID.",
                          "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                        },
                        "webhook_url": {
                          "nullable": true,
                          "type": "string",
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "input": {
                            "nullable": true
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "detail": [
                    {
                      "type": "missing",
                      "loc": ["body"],
                      "msg": "Field required",
                      "input": null,
                      "url": "https://errors.pydantic.dev/2.5/v/missing"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete agent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Agent deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "nullable": true,
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Method Not Allowed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agent/all": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        },
        {
          "name": "skip",
          "in": "query",
          "required": false,
          "example": "2",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "List agents",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "example": "2",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agents listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "agents": {
                          "type": "array",
                          "items": { "type": "object" }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "skip": { "type": "integer" },
                            "limit": { "type": "integer" },
                            "count": { "type": "integer" }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Success",
                  "data": {
                    "agents": [
                      {
                        "_id": "5f3c1e8a9d7b134c8a2fbe66",
                        "agent_config": {
                          "agent_name": "New Agent updated",
                          "agent_type": "conversation",
                          "tasks": [
                            {
                              "tools_config": {
                                "llm_agent": {
                                  "agent_flow_type": "streaming",
                                  "agent_type": "simple_llm_agent",
                                  "routes": null,
                                  "llm_config": {
                                    "model": "gpt-3.5-turbo",
                                    "max_tokens": 150,
                                    "family": "openai",
                                    "temperature": 0.2,
                                    "request_json": false,
                                    "stop": null,
                                    "top_k": 0,
                                    "top_p": 0.9,
                                    "min_p": 0.1,
                                    "frequency_penalty": 0.0,
                                    "presence_penalty": 0.0,
                                    "provider": "openai",
                                    "base_url": null,
                                    "routes": null,
                                    "agent_flow_type": "streaming",
                                    "extraction_details": null,
                                    "summarization_details": null
                                  }
                                },
                                "synthesizer": {
                                  "provider": "deepgram",
                                  "provider_config": {
                                    "voice": "Asteria",
                                    "model": "aura-asteria-en"
                                  },
                                  "stream": true,
                                  "buffer_size": 150,
                                  "audio_format": "wav",
                                  "caching": true
                                },
                                "transcriber": {
                                  "model": "nova-2",
                                  "language": "en",
                                  "stream": true,
                                  "sampling_rate": 16000,
                                  "encoding": "linear16",
                                  "endpointing": 700,
                                  "keywords": "",
                                  "task": "transcribe",
                                  "provider": "deepgram"
                                },
                                "input": {
                                  "provider": "twilio",
                                  "format": "wav"
                                },
                                "output": {
                                  "provider": "twilio",
                                  "format": "wav"
                                },
                                "api_tools": {
                                  "type": "object",
                                  "description": "API tools to use."
                                }
                              },
                              "toolchain": {
                                "execution": "parallel",
                                "pipelines": [
                                  ["transcriber", "llm", "synthesizer"]
                                ]
                              },
                              "task_type": "conversation",
                              "task_config": {
                                "voicemail": false,
                                "optimize_latency": true,
                                "hangup_after_silence": 10,
                                "incremental_delay": 1200,
                                "number_of_words_for_interruption": 2,
                                "interruption_backoff_period": 0,
                                "hangup_after_LLMCall": false,
                                "call_cancellation_prompt": "",
                                "call_hangup_message": null,
                                "backchanneling": false,
                                "backchanneling_message_gap": 5,
                                "backchanneling_start_delay": 5,
                                "ambient_noise": false,
                                "ambient_noise_track": "office-ambience",
                                "call_terminate": 300,
                                "use_fillers": false,
                                "trigger_user_online_message_after": 6,
                                "check_user_online_message": "Hey, are you still there",
                                "check_if_user_online": true,
                                "generate_precise_transcript": false
                              }
                            }
                          ],
                          "agent_welcome_message": "Hello, how can I help you today?"
                        },
                        "agent_prompts": {
                          "task_1": {
                            "system_prompt": "You are a helpful assistant."
                          }
                        },
                        "assistant_status": "updated",
                        "org_id": "7e1d3a9c8f244eb7a65fc230",
                        "created_at": "2025-05-20T09:33:41.102000",
                        "updated_at": "2025-05-20T09:53:27.811000",
                        "agent_id": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70",
                        "created_by": "68188d4c14144e87791de7d5",
                        "updated_by": "68188d4c14144e87791de7d5",
                        "webhook_url": null
                      }
                    ],
                    "pagination": {
                      "skip": 0,
                      "limit": 10,
                      "count": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/call?user_id={user_id}&org_id={org_id}": {
      "parameters": [],
      "post": {
        "summary": "Initiate Call",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string",
              "default": "Bearer "
            },
            "example": "Bearer <token>"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "description": "ID of the user for whom the call is initiated",
            "example": "{{user_id}}",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org_id",
            "in": "query",
            "required": true,
            "description": "ID of the organization",
            "example": "{{org_id}}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the call was initiated successfully.",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result.",
                      "example": "Call initiated successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Call details",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the call.",
                          "example": "success"
                        },
                        "agent_id": {
                          "type": "string",
                          "description": "ID of the agent handling the call.",
                          "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                        },
                        "user_id": {
                          "type": "string",
                          "description": "ID of the user for whom the call is initiated.",
                          "example": "9f2a7c3d8e114fa6b02bd983"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID.",
                          "example": " 7e1d3a9c8f244eb7a65fc230"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "input": {
                            "nullable": true
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "detail": [
                    {
                      "type": "missing",
                      "loc": ["body"],
                      "msg": "Field required",
                      "input": null,
                      "url": "https://errors.pydantic.dev/2.5/v/missing"
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent_id": {
                    "type": "string",
                    "description": "ID of the agent to handle the call",
                    "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                  },
                  "recipient_phone_number": {
                    "type": "string",
                    "description": "Phone number of the recipient",
                    "example": "+919876543210"
                  }
                },
                "required": ["agent_id", "recipient_phone_number"]
              }
            }
          }
        }
      }
    },
    "/api/v1/execution/all": {
      "parameters": [],
      "get": {
        "summary": "List agent execution",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string",
              "default": "Bearer "
            },
            "example": "Bearer <token>"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Status of the execution",
            "example": "pending",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Number of items per page",
            "example": "100",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "description": "ID of the agent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of agent executions fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the executions were fetched successfully.",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result.",
                      "example": "Executions fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Execution list data",
                      "properties": {
                        "executions": {
                          "type": "array",
                          "description": "List of executions.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "execution_id": {
                                "type": "string",
                                "description": "Unique identifier for the execution.",
                                "example": "exec_123456789"
                              },
                              "agent_id": {
                                "type": "string",
                                "description": "ID of the agent.",
                                "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the execution.",
                                "example": "completed"
                              },
                              "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time of the execution.",
                                "example": "2024-05-20T10:00:00Z"
                              },
                              "ended_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End time of the execution.",
                                "example": "2024-05-20T10:05:00Z"
                              },
                              "recipient_phone_number": {
                                "type": "string",
                                "description": "Phone number of the recipient.",
                                "example": "+919876543210"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "description": "Pagination details.",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "description": "Number of items per page.",
                              "example": 100
                            },
                            "count": {
                              "type": "integer",
                              "description": "Total number of items.",
                              "example": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/execution/{execution_id}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        },
        {
          "name": "execution_id",
          "in": "path",
          "required": true,
          "description": "ID of the execution to retrieve",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get execution",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Execution fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the execution was fetched successfully.",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result.",
                      "example": "Execution fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Execution details",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the execution.",
                          "example": "7a3f1bde4c884f92a1bde452"
                        },
                        "agent_id": {
                          "type": "string",
                          "description": "ID of the agent.",
                          "example": "a3f8d4b2-7e19-4c3a-95de-1a6fcb9b4d70"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the execution.",
                          "example": "completed"
                        },
                        "provider": {
                          "type": "string",
                          "description": "Provider of the execution.",
                          "example": "twilio"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID.",
                          "example": "7e1d3a9c8f244eb7a65fc230"
                        },
                        "answered_by_voice_mail": {
                          "type": "boolean",
                          "description": "Whether the call was answered by voicemail.",
                          "example": false
                        },
                        "context_details": {
                          "type": "object",
                          "nullable": true,
                          "description": "Additional context details for the execution."
                        },
                        "conversation_time": {
                          "type": "number",
                          "description": "Duration of the conversation in minutes.",
                          "example": 5.14
                        },
                        "cost_breakdown": {
                          "type": "object",
                          "description": "Breakdown of costs for different services.",
                          "properties": {
                            "llm": {
                              "type": "number",
                              "example": 0.00069
                            },
                            "transcriber": {
                              "type": "number",
                              "example": 0.000604
                            },
                            "synthesizer": {
                              "type": "number",
                              "example": 0.002456
                            },
                            "network": {
                              "type": "number",
                              "example": 0
                            },
                            "platform": {
                              "type": "number",
                              "example": 0.02
                            }
                          }
                        },
                        "telephony_data": {
                          "type": "object",
                          "description": "Telephony related data for the call.",
                          "properties": {
                            "provider_call_id": {
                              "type": "string",
                              "example": "CA45f1c9a8b2e02419d3817021a4bcf8d7"
                            },
                            "provider": {
                              "type": "string",
                              "example": "twilio"
                            },
                            "hosted_telephony": {
                              "type": "boolean",
                              "example": true
                            },
                            "hangup_by": {
                              "type": "string",
                              "example": "user"
                            },
                            "call_type": {
                              "type": "string",
                              "example": "outbound"
                            },
                            "duration": {
                              "type": "string",
                              "example": "6"
                            },
                            "recording_url": {
                              "type": "string",
                              "example": "twilio url"
                            },
                            "to_number": {
                              "type": "string",
                              "example": "+919876543210"
                            },
                            "from_number": {
                              "type": "string",
                              "example": "+18445520984"
                            },
                            "hangup_reason": {
                              "type": "string",
                              "nullable": true
                            },
                            "hangup_provider_code": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "total_cost": {
                          "type": "number",
                          "description": "Total cost of the execution.",
                          "example": 0.024
                        },
                        "transcript": {
                          "type": "string",
                          "description": "Transcript of the conversation.",
                          "example": "assistant: Hello, This is survey call from bank of india\nuser:  hello\nassistant:  Have you used Business Loans with Bank of India and can participate in a quick survey?\n"
                        },
                        "usage_breakdown": {
                          "type": "object",
                          "description": "Breakdown of usage for different services.",
                          "properties": {
                            "llm_model": {
                              "type": "object",
                              "properties": {
                                "gpt-3.5-turbo": {
                                  "type": "object",
                                  "properties": {
                                    "input": {
                                      "type": "integer",
                                      "example": 1023
                                    },
                                    "output": {
                                      "type": "integer",
                                      "example": 27
                                    }
                                  }
                                }
                              }
                            },
                            "llm_tokens": {
                              "type": "integer",
                              "example": 0
                            },
                            "transcriber_provider": {
                              "type": "string",
                              "example": "deepgram"
                            },
                            "transcriber_model": {
                              "type": "string",
                              "example": "nova-2"
                            },
                            "transcriber_duration": {
                              "type": "number",
                              "example": 4.9999375
                            },
                            "synthesizer_provider": {
                              "type": "string",
                              "example": "deepgram"
                            },
                            "synthesizer_model": {
                              "type": "string",
                              "example": "aura-asteria-en"
                            },
                            "synthesizer_characters": {
                              "type": "integer",
                              "example": 131
                            }
                          }
                        },
                        "agent_name": {
                          "type": "string",
                          "description": "Name of the agent.",
                          "example": "New Agent"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Method Not Allowed"
                    }
                  }
                },
                "example": {
                  "detail": "Method Not Allowed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/me": {
      "parameters": [],
      "get": {
        "summary": "Me",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string",
              "default": "Bearer "
            },
            "example": "Bearer <token>"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "9f2a7c3d8e114fa6b02bd983"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@gmail.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "abc"
                        },
                        "role": {
                          "type": "string",
                          "example": "user"
                        },
                        "admin": {
                          "type": "boolean",
                          "example": false
                        },
                        "wallet": {
                          "type": "number",
                          "example": 0.0
                        },
                        "is_first_time_login": {
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-05T10:05:00.801000"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-08T05:26:56.689000"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "organizations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "7e1d3a9c8f244eb7a65fc230"
                              },
                              "name": {
                                "type": "string",
                                "example": "Cloudmate LLP updated"
                              },
                              "email": {
                                "type": "string",
                                "example": "cloud@mate.com"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": null
                              },
                              "website": {
                                "type": "string",
                                "nullable": true,
                                "example": null
                              },
                              "phone": {
                                "type": "string",
                                "nullable": true,
                                "example": null
                              },
                              "address": {
                                "type": "string",
                                "nullable": true,
                                "example": null
                              },
                              "created_by": {
                                "type": "string",
                                "example": "68188d4c14144e87791de7d5"
                              },
                              "updated_by": {
                                "type": "string",
                                "example": "68188d4c14144e87791de7d5"
                              },
                              "deleted_by": {
                                "type": "string",
                                "nullable": true,
                                "example": null
                              },
                              "is_deleted": {
                                "type": "boolean",
                                "example": false
                              },
                              "voices": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "4e9a1f6b7d2c3e9a1b0d4f72",
                                  "a7c5d9f123b48e6c7f0a1d2b",
                                  "c3b1a7e4f9d2b06c8e4a3f71"
                                ]
                              }
                            }
                          }
                        },
                        "is_verified": {
                          "type": "boolean",
                          "example": true
                        },
                        "verification_token": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "verification_token_expires_at": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "active_organization": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "7e1d3a9c8f244eb7a65fc230"
                            },
                            "name": {
                              "type": "string",
                              "example": "Cloudmate 2"
                            },
                            "email": {
                              "type": "string",
                              "example": "cloud@mate.com"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "website": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "phone": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "address": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "created_by": {
                              "type": "string",
                              "example": "68188d4c14144e87791de7d5"
                            },
                            "updated_by": {
                              "type": "string",
                              "example": "68188d4c14144e87791de7d5"
                            },
                            "deleted_by": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "is_deleted": {
                              "type": "boolean",
                              "example": false
                            },
                            "voices": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "67a6085623d73e2e471fe548",
                                "67bd8dc113a858bd41fa3372",
                                "67bd8dc213a858bd41fa337d"
                              ]
                            }
                          }
                        },
                        "last_login_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-20T10:32:58.570000"
                        },
                        "google_id": {
                          "type": "string",
                          "example": "d9f3b1e4-7c8d-4f2a-b3e9-1a7c5d9f0234"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{newUser_id}": {
      "parameters": [
        {
          "name": "newUser_id",
          "in": "path",
          "required": true,
          "description": "ID of the user",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string",
              "default": "Bearer "
            },
            "example": "Bearer <token>"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "9f2a7c3d8e114fa6b02bd983"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@gmail.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "abcd"
                        },
                        "role": {
                          "type": "string",
                          "example": "user"
                        },
                        "admin": {
                          "type": "boolean",
                          "example": false
                        },
                        "wallet": {
                          "type": "number",
                          "example": 0.0
                        },
                        "is_first_time_login": {
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-05T10:05:00.801000"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-20T10:53:02.160000"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "organizations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "7e1d3a9c8f244eb7a65fc230",
                            "a9d3e672bf1c45809e7a2d3f",
                            "c8b92d4f3a5e17f6801d4c29"
                          ]
                        },
                        "is_verified": {
                          "type": "boolean",
                          "example": true
                        },
                        "verification_token": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "verification_token_expires_at": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "active_organization": {
                          "type": "string",
                          "example": "7e1d3a9c8f244eb7a65fc230"
                        },
                        "last_login_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-20T10:32:58.570000"
                        },
                        "google_id": {
                          "type": "string",
                          "example": "d9f3b1e4-7c8d-4f2a-b3e9-1a7c5d9f0234"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "input": {
                            "nullable": true
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "detail": [
                    {
                      "type": "missing",
                      "loc": ["body"],
                      "msg": "Field required",
                      "input": null,
                      "url": "https://errors.pydantic.dev/2.5/v/missing"
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the user",
                    "example": "John Doe"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/knowledge-base/upload": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "post": {
        "summary": "Create Knowledge base",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file", "name"],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The knowledge base file to upload"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the knowledge base",
                    "example": "Testing File 1"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the knowledge base",
                    "example": "demo hotel booking knowledge base file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Knowledge base created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the knowledge base was created successfully",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Knowledge base created successfully. File processing started in background."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the knowledge base",
                          "example": "682d96b55a99247b2f6ca029"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the knowledge base",
                          "example": "Testing File 1"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "Name of the uploaded file",
                          "example": "hotel_booking_knowledge_base.pdf"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the knowledge base",
                          "example": "demo hotel booking knowledge base file"
                        },
                        "similarity_top_k": {
                          "type": "string",
                          "description": "Number of similar items to retrieve",
                          "example": "10"
                        },
                        "status": {
                          "type": "string",
                          "description": "Current status of the knowledge base",
                          "example": "processing"
                        },
                        "vector_id": {
                          "type": "string",
                          "description": "Unique identifier for the vector store",
                          "example": "kb_682d96b55a99247b2f6ca029_20250521_090245"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID",
                          "example": "681ca52f14144e87791de891"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Creation timestamp",
                          "example": "2025-05-21T09:02:45.424000"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last update timestamp",
                          "example": "2025-05-21T09:02:45.424000"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Deletion timestamp if deleted",
                          "example": null
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the knowledge base is deleted",
                          "example": false
                        },
                        "created_by": {
                          "type": "string",
                          "description": "ID of the user who created the knowledge base",
                          "example": "68188d4c14144e87791de7d5"
                        },
                        "updated_by": {
                          "type": "string",
                          "description": "ID of the user who last updated the knowledge base",
                          "example": "68188d4c14144e87791de7d5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "input": {
                            "nullable": true
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "detail": [
                    {
                      "type": "missing",
                      "loc": ["body", "file"],
                      "msg": "Field required",
                      "input": null,
                      "url": "https://errors.pydantic.dev/2.5/v/missing"
                    },
                    {
                      "type": "missing",
                      "loc": ["body", "name"],
                      "msg": "Field required",
                      "input": null,
                      "url": "https://errors.pydantic.dev/2.5/v/missing"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/knowledge-base/{newKnowledgeBase_id}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        },
        {
          "name": "newKnowledgeBase_id",
          "in": "path",
          "required": true,
          "description": "The ID of the knowledge base to update",
          "schema": {
            "type": "string",
            "example": "682d96b55a99247b2f6ca029"
          }
        }
      ],
      "get": {
        "summary": "Get Knowledgebase",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Knowledge base retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Knowledge base retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the knowledge base",
                          "example": "682d96b55a99247b2f6ca029"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the knowledge base",
                          "example": "Testing File 1"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "Name of the uploaded file",
                          "example": "hotel_booking_knowledge_base.pdf"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the knowledge base",
                          "example": "demo hotel booking knowledge base file"
                        },
                        "similarity_top_k": {
                          "type": "string",
                          "description": "Number of similar items to retrieve",
                          "example": "10"
                        },
                        "status": {
                          "type": "string",
                          "description": "Current status of the knowledge base",
                          "example": "processing"
                        },
                        "vector_id": {
                          "type": "string",
                          "description": "Unique identifier for the vector store",
                          "example": "kb_682d96b55a99247b2f6ca029_20250521_090245"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID",
                          "example": "681ca52f14144e87791de891"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Creation timestamp",
                          "example": "2025-05-21T09:02:45.424000"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last update timestamp",
                          "example": "2025-05-21T09:02:45.424000"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Deletion timestamp if deleted",
                          "example": null
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the knowledge base is deleted",
                          "example": false
                        },
                        "created_by": {
                          "type": "string",
                          "description": "ID of the user who created the knowledge base",
                          "example": "68188d4c14144e87791de7d5"
                        },
                        "updated_by": {
                          "type": "string",
                          "description": "ID of the user who last updated the knowledge base",
                          "example": "68188d4c14144e87791de7d5"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Knowledgebase",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the knowledge base",
                    "example": "Testing File 1"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the knowledge base",
                    "example": "demo hotel booking knowledge base file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Knowledge base updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Knowledge base updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the knowledge base",
                          "example": "682d96b55a99247b2f6ca029"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the knowledge base",
                          "example": "Testing File 1"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the knowledge base",
                          "example": "demo hotel booking knowledge base file"
                        },
                        "similarity_top_k": {
                          "type": "string",
                          "description": "Number of similar items to retrieve",
                          "example": "10"
                        },
                        "status": {
                          "type": "string",
                          "description": "Current status of the knowledge base",
                          "example": "processing"
                        },
                        "vector_id": {
                          "type": "string",
                          "description": "Unique identifier for the vector store",
                          "example": "kb_682d96b55a99247b2f6ca029_20250521_090245"
                        },
                        "org_id": {
                          "type": "string",
                          "description": "Organization ID",
                          "example": "681ca52f14144e87791de891"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Creation timestamp",
                          "example": "2025-05-21T09:02:45.424000"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last update timestamp",
                          "example": "2025-05-21T09:02:45.424000"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Deletion timestamp if deleted",
                          "example": null
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the knowledge base is deleted",
                          "example": false
                        },
                        "created_by": {
                          "type": "string",
                          "description": "ID of the user who created the knowledge base",
                          "example": "68188d4c14144e87791de7d5"
                        },
                        "updated_by": {
                          "type": "string",
                          "description": "ID of the user who last updated the knowledge base",
                          "example": "68188d4c14144e87791de7d5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "input": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Knowledgebase",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Knowledge base deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Knowledge base deleted successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the request",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Method Not Allowed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/knowledge-base/all": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "get": {
        "summary": "Get All Knowledge Bases",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Knowledge base retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Knowledge base retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "knowledge_bases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique identifier for the knowledge base",
                                "example": "682d96b55a99247b2f6ca029"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the knowledge base",
                                "example": "Testing File 1"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the knowledge base",
                                "example": "demo hotel booking knowledge base file"
                              },
                              "similarity_top_k": {
                                "type": "string",
                                "description": "Number of similar items to retrieve",
                                "example": "10"
                              },
                              "status": {
                                "type": "string",
                                "description": "Current status of the knowledge base",
                                "example": "processing"
                              },
                              "vector_id": {
                                "type": "string",
                                "description": "Unique identifier for the vector store",
                                "example": "kb_682d96b55a99247b2f6ca029_20250521_090245"
                              },
                              "org_id": {
                                "type": "string",
                                "description": "Organization ID",
                                "example": "681ca52f14144e87791de891"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Creation timestamp",
                                "example": "2025-05-21T09:02:45.424000"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last update timestamp",
                                "example": "2025-05-21T09:02:45.424000"
                              },
                              "deleted_at": {
                                "type": "string",
                                "nullable": true,
                                "description": "Deletion timestamp if deleted",
                                "example": null
                              },
                              "is_deleted": {
                                "type": "boolean",
                                "description": "Whether the knowledge base is deleted",
                                "example": false
                              },
                              "created_by": {
                                "type": "string",
                                "description": "ID of the user who created the knowledge base",
                                "example": "68188d4c14144e87791de7d5"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "ID of the user who last updated the knowledge base",
                                "example": "68188d4c14144e87791de7d5"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },


    "/api/v1/phone-numbers/sync": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "post": {
        "summary": "Sync Numbers",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Phone numbers synced successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the sync was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Successfully synced 8 numbers from all providers"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "synced_numbers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique identifier for the phone number",
                                "example": "1234567890abcdef12345678"
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The phone number in E.164 format",
                                "example": "+12345678901"
                              },
                              "telephony_provider": {
                                "type": "string",
                                "description": "The provider of the phone number",
                                "example": "twilio"
                              },
                              "phone_number_id": {
                                "type": "string",
                                "description": "Provider's identifier for the phone number",
                                "example": "PN1234567890abcdef12345678"
                              },
                              "org_id": {
                                "type": "string",
                                "description": "Organization ID",
                                "example": "org_1234567890abcdef12345678"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "voice": {
                                    "type": "boolean",
                                    "description": "Whether voice calls are supported",
                                    "example": true
                                  },
                                  "sms": {
                                    "type": "boolean",
                                    "description": "Whether SMS is supported",
                                    "example": true
                                  },
                                  "mms": {
                                    "type": "boolean",
                                    "description": "Whether MMS is supported",
                                    "example": true
                                  },
                                  "fax": {
                                    "type": "boolean",
                                    "description": "Whether fax is supported",
                                    "example": false
                                  }
                                }
                              },
                              "properties": {
                                "type": "object",
                                "properties": {
                                  "friendly_name": {
                                    "type": "string",
                                    "description": "Human-readable name for the phone number",
                                    "example": "(123) 456-7890"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Current status of the phone number",
                                    "example": "in-use"
                                  }
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Creation timestamp",
                                "example": "2025-05-21T09:24:57.014000"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last update timestamp",
                                "example": "2025-05-21T09:26:31.436000"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "ID of the user who created the phone number",
                                "example": "user_1234567890abcdef12345678"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "ID of the user who last updated the phone number",
                                "example": "user_1234567890abcdef12345678"
                              },
                              "deleted_at": {
                                "type": "string",
                                "nullable": true,
                                "description": "Deletion timestamp if deleted",
                                "example": null
                              },
                              "deleted_by": {
                                "type": "string",
                                "nullable": true,
                                "description": "ID of the user who deleted the phone number",
                                "example": null
                              },
                              "is_deleted": {
                                "type": "boolean",
                                "description": "Whether the phone number is deleted",
                                "example": false
                              }
                            }
                          }
                        },
                        "total_synced": {
                          "type": "integer",
                          "description": "Total number of phone numbers synced",
                          "example": 8
                        },
                        "provider_counts": {
                          "type": "object",
                          "description": "Count of synced numbers by provider",
                          "properties": {
                            "twilio": {
                              "type": "integer",
                              "description": "Number of Twilio numbers synced",
                              "example": 8
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message",
                      "example": "No telephony provider is connected. Please connect at least one provider to proceed."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "description": "Additional error data",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phone-numbers/available": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "get": {
        "summary": "Available Numbers",
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "required": false,
            "description": "Pattern to search for in phone numbers",
            "example": "786",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area_code",
            "in": "query",
            "required": false,
            "description": "Area code to filter phone numbers",
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "description": "Telephony provider to filter numbers",
            "example": "twilio",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "Country code to filter phone numbers",
            "example": "US",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Available phone numbers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Available phone numbers retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "description": "List of available phone numbers",
                      "items": {
                        "type": "object",
                        "properties": {
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in E.164 format",
                            "example": "+12345678901"
                          },
                          "location": {
                            "type": "string",
                            "description": "Location of the phone number",
                            "example": "CA, US"
                          },
                          "capabilities": {
                            "type": "object",
                            "description": "Capabilities of the phone number",
                            "properties": {
                              "voice": {
                                "type": "boolean",
                                "description": "Whether voice calls are supported",
                                "example": true
                              },
                              "SMS": {
                                "type": "boolean",
                                "description": "Whether SMS is supported",
                                "example": true
                              },
                              "MMS": {
                                "type": "boolean",
                                "description": "Whether MMS is supported",
                                "example": true
                              }
                            }
                          },
                          "provider": {
                            "type": "string",
                            "description": "The provider of the phone number",
                            "example": "twilio"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Available phone numbers retrieved successfully",
                  "data": [
                    {
                      "phone_number": "+12345678901",
                      "location": "CA, US",
                      "capabilities": {
                        "voice": true,
                        "SMS": true,
                        "MMS": true
                      },
                      "provider": "twilio"
                    },
                    {
                      "phone_number": "+19876543210",
                      "location": "NY, US",
                      "capabilities": {
                        "voice": true,
                        "SMS": true,
                        "MMS": true
                      },
                      "provider": "twilio"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Twilio is not connected. Please connect your account to proceed."
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "description": "Additional error data",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/all": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "get": {
        "summary": "Get all Organizations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Organizations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "organizations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique identifier for the organization",
                                "example": "org_1234567890abcdef"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the organization",
                                "example": "Acme Corporation"
                              },
                              "email": {
                                "type": "string",
                                "description": "Email address of the organization",
                                "example": "contact@acme.com"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "description": "Description of the organization",
                                "example": "Leading provider of innovative solutions"
                              },
                              "website": {
                                "type": "string",
                                "nullable": true,
                                "description": "Website URL of the organization",
                                "example": "https://www.acme.com"
                              },
                              "phone": {
                                "type": "string",
                                "nullable": true,
                                "description": "Phone number of the organization",
                                "example": "+1-555-0123"
                              },
                              "address": {
                                "type": "string",
                                "nullable": true,
                                "description": "Address of the organization",
                                "example": "123 Business Ave, Suite 100, New York, NY 10001"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Creation timestamp",
                                "example": "2024-01-01T00:00:00.000000"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last update timestamp",
                                "example": "2024-01-02T00:00:00.000000"
                              },
                              "deleted_at": {
                                "type": "string",
                                "nullable": true,
                                "description": "Deletion timestamp if deleted",
                                "example": null
                              },
                              "created_by": {
                                "type": "string",
                                "description": "ID of the user who created the organization",
                                "example": "user_1234567890abcdef"
                              },
                              "updated_by": {
                                "type": "string",
                                "description": "ID of the user who last updated the organization",
                                "example": "user_1234567890abcdef"
                              },
                              "deleted_by": {
                                "type": "string",
                                "nullable": true,
                                "description": "ID of the user who deleted the organization",
                                "example": null
                              },
                              "is_deleted": {
                                "type": "boolean",
                                "description": "Whether the organization is deleted",
                                "example": false
                              },
                              "voices": {
                                "type": "array",
                                "description": "List of voice IDs associated with the organization",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "67a6085623d73e2e471fe548",
                                  "67a6085623d73e2e471fe549"
                                ]
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "skip": {
                              "type": "integer",
                              "description": "Number of items skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Maximum number of items per page",
                              "example": 10
                            },
                            "count": {
                              "type": "integer",
                              "description": "Total number of items",
                              "example": 5
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/active": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "get": {
        "summary": "Get Active Organization",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Active organization details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Organization with voices fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the organization",
                          "example": "org_1234567890abcdef"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the organization",
                          "example": "Acme Corporation"
                        },
                        "email": {
                          "type": "string",
                          "description": "Email address of the organization",
                          "example": "contact@acme.com"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true,
                          "description": "Description of the organization",
                          "example": null
                        },
                        "website": {
                          "type": "string",
                          "nullable": true,
                          "description": "Website URL of the organization",
                          "example": null
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true,
                          "description": "Phone number of the organization",
                          "example": null
                        },
                        "address": {
                          "type": "string",
                          "nullable": true,
                          "description": "Address of the organization",
                          "example": null
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Creation timestamp",
                          "example": "2024-01-01T00:00:00.000000"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last update timestamp",
                          "example": "2024-01-01T00:00:00.000000"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Deletion timestamp if deleted",
                          "example": null
                        },
                        "created_by": {
                          "type": "string",
                          "description": "ID of the user who created the organization",
                          "example": "user_1234567890abcdef"
                        },
                        "updated_by": {
                          "type": "string",
                          "description": "ID of the user who last updated the organization",
                          "example": "user_1234567890abcdef"
                        },
                        "deleted_by": {
                          "type": "string",
                          "nullable": true,
                          "description": "ID of the user who deleted the organization",
                          "example": null
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the organization is deleted",
                          "example": false
                        },
                        "voices": {
                          "type": "array",
                          "description": "List of voices associated with the organization",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique identifier for the voice",
                                "example": "voice_1234567890abcdef"
                              },
                              "voice_id": {
                                "type": "string",
                                "description": "Provider's voice identifier",
                                "example": "voice_abc123"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the voice",
                                "example": "Emma"
                              },
                              "model": {
                                "type": "string",
                                "description": "Voice model identifier",
                                "example": "standard"
                              },
                              "language_code": {
                                "type": "string",
                                "description": "Language code for the voice",
                                "example": "en-US"
                              },
                              "language": {
                                "type": "string",
                                "description": "Language of the voice",
                                "example": "en"
                              },
                              "accent": {
                                "type": "string",
                                "description": "Accent of the voice",
                                "example": "American"
                              },
                              "gender": {
                                "type": "string",
                                "description": "Gender of the voice",
                                "example": "female"
                              },
                              "preview_url": {
                                "type": "string",
                                "description": "URL to preview the voice",
                                "example": "https://example.com/voices/emma-preview.mp3"
                              },
                              "custom": {
                                "type": "boolean",
                                "description": "Whether this is a custom voice",
                                "example": false
                              },
                              "provider": {
                                "type": "string",
                                "description": "Voice provider",
                                "example": "elevenlabs"
                              },
                              "is_default": {
                                "type": "boolean",
                                "description": "Whether this is the default voice",
                                "example": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Creation timestamp",
                                "example": "2024-01-01T00:00:00.000000"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last update timestamp",
                                "example": "2024-01-01T00:00:00.000000"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Organization with voices fetched successfully",
                  "data": {
                    "_id": "org_1234567890abcdef",
                    "name": "Acme Corporation",
                    "email": "contact@acme.com",
                    "description": null,
                    "website": null,
                    "phone": null,
                    "address": null,
                    "created_at": "2024-01-01T00:00:00.000000",
                    "updated_at": "2024-01-01T00:00:00.000000",
                    "deleted_at": null,
                    "created_by": "user_1234567890abcdef",
                    "updated_by": "user_1234567890abcdef",
                    "deleted_by": null,
                    "is_deleted": false,
                    "voices": [
                      {
                        "_id": "voice_1234567890abcdef",
                        "voice_id": "voice_abc123",
                        "name": "Emma",
                        "model": "standard",
                        "language_code": "en-US",
                        "language": "en",
                        "accent": "American",
                        "gender": "female",
                        "preview_url": "https://example.com/voices/emma-preview.mp3",
                        "custom": false,
                        "provider": "elevenlabs",
                        "is_default": true,
                        "created_at": "2024-01-01T00:00:00.000000",
                        "updated_at": "2024-01-01T00:00:00.000000"
                      },
                      {
                        "_id": "voice_0987654321fedcba",
                        "voice_id": "voice_def456",
                        "name": "James",
                        "model": "premium",
                        "language_code": "en-GB",
                        "language": "en",
                        "accent": "British",
                        "gender": "male",
                        "preview_url": "https://example.com/voices/james-preview.mp3",
                        "custom": false,
                        "provider": "elevenlabs",
                        "is_default": false,
                        "created_at": "2024-01-01T00:00:00.000000",
                        "updated_at": "2024-01-01T00:00:00.000000"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{newOrganization_id}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        },
        {
          "name": "newOrganization_id",
          "in": "path",
          "required": true,
          "description": "ID of the organization to update",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update Organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the organization",
                    "example": "Updated Acme Corporation"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the organization",
                    "example": "updated@acme.com"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "description": "Description of the organization",
                    "example": "Updated description"
                  },
                  "website": {
                    "type": "string",
                    "nullable": true,
                    "description": "Website URL of the organization",
                    "example": "https://www.updated-acme.com"
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true,
                    "description": "Phone number of the organization",
                    "example": "+1-555-9999"
                  },
                  "address": {
                    "type": "string",
                    "nullable": true,
                    "description": "Address of the organization",
                    "example": "456 Business Blvd, Suite 200, New York, NY 10002"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Organization updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the organization",
                          "example": "org_1234567890abcdef"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the organization",
                          "example": "Updated Acme Corporation"
                        },
                        "email": {
                          "type": "string",
                          "description": "Email address of the organization",
                          "example": "updated@acme.com"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true,
                          "description": "Description of the organization",
                          "example": "Updated description"
                        },
                        "website": {
                          "type": "string",
                          "nullable": true,
                          "description": "Website URL of the organization",
                          "example": "https://www.updated-acme.com"
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true,
                          "description": "Phone number of the organization",
                          "example": "+1-555-9999"
                        },
                        "address": {
                          "type": "string",
                          "nullable": true,
                          "description": "Address of the organization",
                          "example": "456 Business Blvd, Suite 200, New York, NY 10002"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Creation timestamp",
                          "example": "2024-01-01T00:00:00.000000"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last update timestamp",
                          "example": "2024-01-03T00:00:00.000000"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Deletion timestamp if deleted",
                          "example": null
                        },
                        "created_by": {
                          "type": "string",
                          "description": "ID of the user who created the organization",
                          "example": "user_1234567890abcdef"
                        },
                        "updated_by": {
                          "type": "string",
                          "description": "ID of the user who last updated the organization",
                          "example": "user_1234567890abcdef"
                        },
                        "deleted_by": {
                          "type": "string",
                          "nullable": true,
                          "description": "ID of the user who deleted the organization",
                          "example": null
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the organization is deleted",
                          "example": false
                        },
                        "voices": {
                          "type": "array",
                          "description": "List of voice IDs associated with the organization",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "67a6085623d73e2e471fe548",
                            "67a6085623d73e2e471fe549"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Organization not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configs/transcribers": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "get": {
        "summary": "List Transcribers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of available transcribers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique identifier for the transcriber",
                            "example": "transcriber_id464363"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the transcriber",
                            "example": "basic-transcriber"
                          },
                          "canonical_name": {
                            "type": "string",
                            "description": "Canonical name of the transcriber",
                            "example": "basic-v1"
                          },
                          "architecture": {
                            "type": "string",
                            "description": "Architecture of the transcriber",
                            "example": "standard"
                          },
                          "languages": {
                            "type": "array",
                            "description": "Supported languages",
                            "items": {
                              "type": "string"
                            },
                            "example": ["en", "es", "fr", "de", "it"]
                          },
                          "provider": {
                            "type": "string",
                            "description": "Provider of the transcriber",
                            "example": "example-provider"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configs/transcribers/sync": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Bearer token for authentication",
          "schema": {
            "type": "string",
            "default": "Bearer "
          },
          "example": "Bearer <token>"
        }
      ],
      "post": {
        "summary": "Fetch Transcribers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Transcribers synced successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the sync was successful",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result",
                      "example": "Synced 16 transcribers successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "Number of transcribers synced",
                          "example": 16
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
